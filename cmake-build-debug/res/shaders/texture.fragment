#version 330 core

in vec2 texCoords;

uniform sampler2D u_Tex;

out vec4 FragColor;

in vec4 world_position;
uniform int size;
 //float lights[2] = float[2](300.0, 150.0);
uniform float lights[128];
vec2 point_light_pos = vec2(100, 150);
float point_light_intensity = 2.4;

vec4 getLight(vec2 position, vec4 frag_color){
    float d = distance(position, world_position.xy) / 2;
    float diffuse = 0.0;

    if (d <= point_light_intensity)
    diffuse =  1.0 - abs(d / point_light_intensity);


    return frag_color * 50/d + 0.3 * diffuse;
}

void main()
{

    /*
        vec4 colorToRender = texture(u_Tex, texCoords);
        if(colorToRender.x == 1.0){
            FragColor = vec4(0.0, 0.0, 1.0, 1.0);
        }else{
            FragColor = colorToRender;
        }
    */

    vec4 frag_color = texture(u_Tex, texCoords);

        if (frag_color.a < 1.0)
        discard;

    vec4 c = vec4(0);

    for(int i = 0; i < size; i += 2){
        c += getLight(vec2(lights[i], lights[i + 1]), frag_color);
    }

    FragColor = c;
};